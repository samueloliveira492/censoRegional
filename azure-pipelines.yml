# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  Test.Result.Files: '$Build.Repository.LocalPath/TestsResults/**/*.xml'
  Test.Result.Coverage.OpenCover.File: '$(Build.Repository.LocalPath)/CoverageResult/coverage.opencover.xml'
  Test.Result.Coverage.Cobertura.File: '$(Build.Repository.LocalPath)/CoverageResult/coverage.cobertura.xml'
  DevEnvDir: 'C:\ProgramFiles (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\\'

steps:
- task: UseDotNet@2
  inputs:
    version: '2.2.0'
    packageType: runtime
- task: NuGetToolInstaller@1
  displayName: 'Instalação da ferramenta NuGet'

- task: DotNetCoreCLI@2
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'install --global coverlet.console'

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'select'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'samueloliveira457'
    scannerMode: 'MSBuild'
    projectKey: 'samueloliveira457_CensoRegional'
    projectName: 'CensoRegional'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'